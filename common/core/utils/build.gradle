apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'

android {
    namespace "uz.uzkassa.smartpos.core.utils"
    compileSdkVersion versions.android.compileSdk

    defaultConfig {
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk
        versionCode 1
        versionName "1.0"

        consumerProguardFiles 'consumer-rules.pro'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions { jvmTarget = "1.8" }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.androidx.testEspresso"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx.testExtJunit"
    androidTestImplementation "androidx.test:runner:$versions.androidx.testRunner"
    testImplementation "junit:junit:$versions.junit.junit"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin.stdlib"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$versions.kotlin.serialization"

    api project(':common:core:data:manager:logger')

    api("com.github.valeryponomarenko.componentsmanager:androidx:$versions.valeryponomarenko.componentsmanager") {
        exclude group: 'androidx.appcompat', module: 'appcompat'
    }
}